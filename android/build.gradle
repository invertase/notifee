import org.gradle.internal.jvm.Jvm

buildscript {
  repositories {
    google()
    mavenCentral()
  }
  dependencies {
    classpath 'com.android.tools.build:gradle:4.1.3'
  }
}

apply plugin: 'com.android.library'


ext {

  jvmVersion = Jvm.current().javaVersion.majorVersion
  if (jvmVersion != "8" && jvmVersion != "11" && jvmVersion != "14") {
    println "\n\n\n"
    println "**************************************************************************************************************"
    println "\n\n\n"
    println "ERROR: Notifee builds with JVM LTS and current releases (currently major version 8, 11, or 14)."
    println "  Incompatible major version detected: '" + jvmVersion + "'"
    println "\n\n\n"
    println "**************************************************************************************************************"
    println "\n\n\n"
    System.exit(1)
  }
  ciBuild = System.getenv("CI") == "true" // works for Travis CI or Github Actions

  // Virtualized Environment like CI may report host CPU counts vs guest, but runs 2 cores
  // everyone else gets 50% of cores to account for SMT which doesn't help this workload
  gradleTestMaxParallelForks = 1
  if (!ciBuild) {
    gradleTestMaxParallelForks = Runtime.runtime.availableProcessors().intdiv(2) ?: 1
  }
}

android {
  compileSdkVersion 30
  testOptions {
    unitTests.returnDefaultValues = true
  }
  defaultConfig {
    minSdkVersion 16
    targetSdkVersion 30
    versionCode 1
    versionName "1.0"

    testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    consumerProguardFiles 'consumer-rules.pro'

    javaCompileOptions {
      annotationProcessorOptions {
        arguments = [eventBusIndex: 'app.notifee.core.EventBusIndex']
      }
    }
  }

  buildTypes {
    release {
      minifyEnabled true
      debuggable false
      jniDebuggable false
      zipAlignEnabled true
      proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
    }
  }

  compileOptions {
    sourceCompatibility JavaVersion.VERSION_1_8
    targetCompatibility JavaVersion.VERSION_1_8
  }

  testOptions.unitTests.all {
    testLogging {
      events "failed", "skipped"
      showStackTraces = true
      exceptionFormat = "full"
    }

    maxParallelForks = gradleTestMaxParallelForks
    forkEvery = 40
    maxHeapSize = "2048m"
    minHeapSize = "1024m"
    systemProperties['junit.jupiter.execution.parallel.enabled'] = true
    systemProperties['junit.jupiter.execution.parallel.mode.default'] = "concurrent"
  }
}

android.libraryVariants.all { variant ->
  def variantName = variant.name.capitalize()
  def assembleTaskName = "assemble${variantName}"
  def copyTaskName = "copy${variantName}Artifacts"

  task(copyTaskName, type: Copy, dependsOn: assembleTaskName, group: "build") {
    variant.outputs.each { output ->
      def newOutputName = "notifee_core_" + output.name + ".aar"
      from(output.outputFile.parent) {
        include output.outputFile.name
        rename output.outputFile.name, newOutputName
      }
    }
    into new File("$project.rootDir/../packages/react-native/android/libs")
  }

  project.tasks.getByName(assembleTaskName).finalizedBy(copyTaskName)
}

repositories {
  google()
  mavenCentral()
  jcenter()
}

dependencies {

  api 'androidx.annotation:annotation:1.2.0' // https://developer.android.com/jetpack/androidx/releases/annotation
  api "com.squareup.okhttp3:okhttp:3.12.12" // okhttp must stay on 3.12.x to support minSdkVersion < 21
  api 'androidx.concurrent:concurrent-futures:1.1.0' // https://developer.android.com/jetpack/androidx/releases/concurrent
  api 'com.google.android.gms:play-services-tasks:17.2.1' // https://developers.google.com/android/guides/releases
  api 'androidx.work:work-runtime:2.5.0' // https://developer.android.com/jetpack/androidx/releases/work
  // Fresco 2.3.0+ may not be react-native compatible until 0.65.x with this: https://github.com/facebook/react-native/pull/30061
  // But! Fresco 2.2.0 is on JCenter and 2.3.0 is on mavenCentral - use 2.3.0 if you have to? https://github.com/facebook/fresco/issues/2585#issuecomment-822785614
  api 'com.facebook.fresco:fresco:2.2.0' // https://github.com/facebook/fresco/releases
  api 'io.jsonwebtoken:jjwt-api:0.11.2' // https://github.com/jwtk/jjwt/releases

  def room_version = '2.2.6' // https://developer.android.com/jetpack/androidx/releases/room
  implementation "androidx.room:room-runtime:$room_version"
  annotationProcessor "androidx.room:room-compiler:$room_version"

  def eventbus_version = '3.2.0' // https://github.com/greenrobot/EventBus/releases
  api "org.greenrobot:eventbus:$eventbus_version"
  annotationProcessor "org.greenrobot:eventbus-annotation-processor:$eventbus_version"

  testImplementation 'junit:junit:4.13.2' // https://github.com/junit-team/junit4/releases
  androidTestImplementation 'androidx.test.ext:junit:1.1.2' // https://developer.android.com/jetpack/androidx/releases/test
  androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0' // see above
}
