require_relative '../node_modules/react-native/scripts/react_native_pods'
require_relative '../node_modules/@react-native-community/cli-platform-ios/native_modules'

# ----------------------------------------------------------------
# set this to false to use the compile NotifeeCore framework
# with this set to false this will be the same way the user would consume NotifeeCore framework
# Note: you must pod install after changing this value

$NotifeeCoreFromSources = true
$NotifeeExtension = true


# ----------------------------------------------------------------

platform :ios, '12.4'
install! 'cocoapods', :deterministic_uuids => false

production = ENV["PRODUCTION"] == "1"

target 'testing' do
  config = use_native_modules!

    # Flags change depending on the env values.
    flags = get_default_flags()
    use_react_native!(
      :path => config[:reactNativePath],
      # to enable hermes on iOS, change `false` to `true` and then install pods
      :production => production,
      :hermes_enabled => flags[:hermes_enabled],
      :fabric_enabled => flags[:fabric_enabled],
      :flipper_configuration => FlipperConfiguration.disabled,
      # An absolute path to your application root.
      :app_path => "#{Pod::Config.instance.installation_root}/.."
    )

   if defined?($NotifeeCoreFromSources) && $NotifeeCoreFromSources == true
      pod 'NotifeeCore', :path => "../../ios"
   end

end

target 'NotifeeTestingNSE' do
  pod 'RNNotifeeCore', :path => "../../packages/react-native"
end

# Enables Flipper.
#
# Note that if you have use_frameworks! enabled, Flipper will not work and
# you should disable the next line.
#use_flipper!()

post_install do |installer|
  react_native_post_install(installer)
  
  __apply_Xcode_12_5_M1_post_install_workaround(installer)

  installer.pods_project.targets.each do |target|
    target.build_configurations.each do |config|
      # Allow use of local compiler caches by using relative pathing for clang
      config.build_settings["CC"] = "clang"
      config.build_settings["LD"] = "clang"
      config.build_settings["CXX"] = "clang++"
      config.build_settings["LDPLUSPLUS"] = "clang++"
    end

    # Turn off warnings on non-Notifee dependencies - some like libevent are really really noisy
    if !target.name.include? "Notifee"
      target.build_configurations.each do |config|
        config.build_settings["GCC_WARN_INHIBIT_ALL_WARNINGS"] = "YES"
      end
    end
  end

end
